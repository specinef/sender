{
  "_args": [
    [
      {
        "raw": "plist@git+https://github.com/nathansobo/node-plist.git",
        "scope": null,
        "escapedName": "plist",
        "name": "plist",
        "rawSpec": "git+https://github.com/nathansobo/node-plist.git",
        "spec": "git+https://github.com/nathansobo/node-plist.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:nathansobo/node-plist.git",
          "sshUrl": "git+ssh://git@github.com/nathansobo/node-plist.git",
          "httpsUrl": "git+https://github.com/nathansobo/node-plist.git",
          "gitUrl": "git://github.com/nathansobo/node-plist.git",
          "shortcut": "github:nathansobo/node-plist",
          "directUrl": "https://raw.githubusercontent.com/nathansobo/node-plist/master/package.json"
        }
      },
      "C:\\atom\\apm\\node_modules\\atom-package-manager"
    ]
  ],
  "_from": "git+https://github.com/nathansobo/node-plist.git",
  "_id": "plist@0.4.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/atom-package-manager/plist",
  "_phantomChildren": {},
  "_requested": {
    "raw": "plist@git+https://github.com/nathansobo/node-plist.git",
    "scope": null,
    "escapedName": "plist",
    "name": "plist",
    "rawSpec": "git+https://github.com/nathansobo/node-plist.git",
    "spec": "git+https://github.com/nathansobo/node-plist.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:nathansobo/node-plist.git",
      "sshUrl": "git+ssh://git@github.com/nathansobo/node-plist.git",
      "httpsUrl": "git+https://github.com/nathansobo/node-plist.git",
      "gitUrl": "git://github.com/nathansobo/node-plist.git",
      "shortcut": "github:nathansobo/node-plist",
      "directUrl": "https://raw.githubusercontent.com/nathansobo/node-plist/master/package.json"
    }
  },
  "_requiredBy": [
    "/atom-package-manager"
  ],
  "_resolved": "git+https://github.com/nathansobo/node-plist.git#bd3a93387f1d4b2cff819b200870d35465796e77",
  "_shasum": "be8da85cec59a7bbf204d1aed2ab45d7674566cf",
  "_shrinkwrap": null,
  "_spec": "plist@git+https://github.com/nathansobo/node-plist.git",
  "_where": "C:\\atom\\apm\\node_modules\\atom-package-manager",
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net"
  },
  "bugs": {
    "url": "https://github.com/TooTallNate/node-plist/issues"
  },
  "contributors": [
    {
      "name": "Hans Huebner",
      "email": "hans.huebner@gmail.com"
    },
    {
      "name": "Pierre Metrailler"
    },
    {
      "name": "Mike Reinstein",
      "email": "reinstein.mike@gmail.com"
    },
    {
      "name": "Vladimir Tsvang"
    },
    {
      "name": "Mathieu D'Amours"
    }
  ],
  "dependencies": {
    "xmlbuilder": "0.4.x",
    "xmldom": "0.1.x"
  },
  "description": "Mac OS X Plist parser/builder for NodeJS. Convert a Plist file or string into a native JS object and native JS object into a Plist file.",
  "devDependencies": {
    "nodeunit": "0.7.x"
  },
  "engines": {
    "node": ">= 0.1.100"
  },
  "gitHead": "bd3a93387f1d4b2cff819b200870d35465796e77",
  "homepage": "https://github.com/TooTallNate/node-plist#readme",
  "keywords": [
    "apple",
    "mac",
    "plist",
    "parser",
    "xml"
  ],
  "main": "./lib/plist",
  "name": "plist",
  "optionalDependencies": {},
  "readme": "# node-plist\r\n\r\nProvides facilities for reading and writing Mac OS X Plist (property list) files. These are often used in programming OS X and iOS applications, as well as the iTunes\r\nconfiguration XML file.\r\n\r\nPlist files represent stored programming \"object\"s. They are very similar\r\nto JSON. A valid Plist file is representable as a native JavaScript Object and vice-versa.\r\n\r\n## Tests\r\n`npm test`\r\n\r\n## Usage\r\nParsing a plist from filename\r\n``` javascript\r\nvar plist = require('plist');\r\n\r\nvar obj = plist.parseFileSync('myPlist.plist');\r\nconsole.log(JSON.stringify(obj));\r\n```\r\n\r\nParsing a plist from string payload\r\n``` javascript\r\nvar plist = require('plist');\r\n\r\nvar obj = plist.parseStringSync('<plist><string>Hello World!</string></plist>');\r\nconsole.log(obj);  // Hello World!\r\n```\r\n\r\nGiven an existing JavaScript Object, you can turn it into an XML document that complies with the plist DTD\r\n\r\n``` javascript\r\nvar plist = require('plist');\r\n\r\nconsole.log(plist.build({'foo' : 'bar'}).toString());\r\n```\r\n\r\n\r\n\r\n### Deprecated methods\r\nThese functions work, but may be removed in a future release. version 0.4.x added Sync versions of these functions.\r\n\r\nParsing a plist from filename\r\n``` javascript\r\nvar plist = require('plist');\r\n\r\nplist.parseFile('myPlist.plist', function(err, obj) {\r\n  if (err) throw err;\r\n\r\n  console.log(JSON.stringify(obj));\r\n});\r\n```\r\n\r\nParsing a plist from string payload\r\n``` javascript\r\nvar plist = require('plist');\r\n\r\nplist.parseString('<plist><string>Hello World!</string></plist>', function(err, obj) {\r\n  if (err) throw err;\r\n\r\n  console.log(obj[0]);  // Hello World!\r\n});\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/node-plist.git"
  },
  "scripts": {
    "test": "nodeunit tests"
  },
  "version": "0.4.3"
}
